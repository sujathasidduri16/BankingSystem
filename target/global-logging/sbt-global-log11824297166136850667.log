[debug] > Exec(;reload; set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers" ;preferScala2;*/*:dumpStructureTo C:/Users/srava/AppData/Local/Temp/sbt-structure.xml; session clear-all ; set ideaPort in Global := 50874, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.2 (Oracle Corporation Java 19)
[debug]       Load.loadUnit: plugins took 17.8388ms
[debug]       Load.loadUnit: defsScala took 0.0089ms
[debug] [Loading] Scanning directory C:\Users\srava\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\srava\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.7342 ms
[debug]           Load.resolveProject(global-plugins) took 0.8826ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\srava\.sbt\1.0\plugins, plugins: List(<none>))) took 1.9609ms
[debug] [Loading] Done in C:\Users\srava\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 3.0609ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0068ms
[debug]     Load.loadUnit(file:/C:/Users/srava/.sbt/1.0/plugins/, ...) took 22.1915ms
[debug]   Load.apply: load took 23.165ms
[debug]   Load.apply: resolveProjects took 0.0847ms
[debug]   Load.apply: finalTransforms took 3.8872ms
[debug]   Load.apply: config.delegates took 0.2405ms
[debug]   Load.apply: Def.make(settings)... took 30.5083ms
[debug]   Load.apply: structureIndex took 9.9792ms
[debug]   Load.apply: mkStreams took 0.0068ms
[info] loading global plugins from C:\Users\srava\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 214.0381ms
[debug]           Load.loadUnit: plugins took 12.969ms
[debug]           Load.loadUnit: defsScala took 0.0018ms
[debug] [Loading] Scanning directory C:\Users\srava\IdeaProjects\BankingProject\project
[debug]             Load.loadUnit: mkEval took 0.1664ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\srava\IdeaProjects\BankingProject\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.7979 ms
[info] loading settings for project bankingproject-build from idea1.sbt ...
[debug]               Load.resolveProject(bankingproject-build) took 1.463ms
[debug]             Load.loadTransitive: finalizeProject(Project(id bankingproject-build, base: C:\Users\srava\IdeaProjects\BankingProject\project, plugins: List(<none>))) took 2.5908ms
[debug] [Loading] Done in C:\Users\srava\IdeaProjects\BankingProject\project, returning: (bankingproject-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 16.9506ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.2554ms
[debug]         Load.loadUnit(file:/C:/Users/srava/IdeaProjects/BankingProject/project/, ...) took 32.8033ms
[debug]       Load.apply: load took 33.5786ms
[debug]       Load.apply: resolveProjects took 0.0618ms
[debug]       Load.apply: finalTransforms took 3.2931ms
[debug]       Load.apply: config.delegates took 0.1948ms
[debug]       Load.apply: Def.make(settings)... took 39.0139ms
[debug]       Load.apply: structureIndex took 8.2177ms
[debug]       Load.apply: mkStreams took 0.0023ms
[info] loading project definition from C:\Users\srava\IdeaProjects\BankingProject\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 181.8931ms
[debug]     Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\srava\IdeaProjects\BankingProject
[debug]       Load.loadUnit: mkEval took 0.1767ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 0.9719 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 26.2175ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\srava\IdeaProjects\BankingProject, plugins: List(<none>))) took 27.6117ms
[debug] [Loading] Done in C:\Users\srava\IdeaProjects\BankingProject, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 68.0517ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.4234ms
[debug]   Load.loadUnit(file:/C:/Users/srava/IdeaProjects/BankingProject/, ...) took 259.9835ms
[debug] Load.apply: load took 261.2008ms
[debug] Load.apply: resolveProjects took 0.1465ms
[debug] Load.apply: finalTransforms took 18.459ms
[debug] Load.apply: config.delegates took 0.2296ms
[debug] Load.apply: Def.make(settings)... took 35.4126ms
[debug] Load.apply: structureIndex took 9.1033ms
[debug] Load.apply: mkStreams took 0.003ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to BankingProject (in build file:/C:/Users/srava/IdeaProjects/BankingProject/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers", None, None)
[info] Defining Global / sbtStructureOptions
[info] The new value will be used by Global / ssOptions
[debug] Defining 
[debug] 	Global / sbtStructureOptions
[debug] 
[debug] The new value will be used by 
[debug] 	Global / ssOptions
[info] Reapplying settings...
[info] set current project to BankingProject (in build file:/C:/Users/srava/IdeaProjects/BankingProject/)
[debug] > Exec(preferScala2, None, None)
[debug] > Exec(*/*:dumpStructureTo C:/Users/srava/AppData/Local/Temp/sbt-structure.xml, None, None)
[debug] Evaluating tasks: Global / dumpStructureTo
[warn] sbt 0.13 shell syntax is deprecated; use slash syntax instead: Global / dumpStructureTo
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] Writing structure to C:\Users\srava\AppData\Local\Temp\sbt-structure.xml...
[info] Done.
[success] Total time: 0 s, completed 19 Oct 2022, 16:07:24
[debug] > Exec(session clear-all, None, None)
[info] Reapplying settings...
[info] set current project to BankingProject (in build file:/C:/Users/srava/IdeaProjects/BankingProject/)
[debug] > Exec(set ideaPort in Global := 50874, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to BankingProject (in build file:/C:/Users/srava/IdeaProjects/BankingProject/)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
